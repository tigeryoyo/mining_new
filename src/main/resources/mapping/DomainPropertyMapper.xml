<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.hust.mining.dao.mapper.DomainPropertyMapper">
	<resultMap id="BaseResultMap" type="com.hust.mining.model.DomainProperty">
		<id column="id" jdbcType="INTEGER" property="id" />
		<result column="domain_id" jdbcType="VARCHAR" property="domainId" />
		<result column="property_id" jdbcType="INTEGER" property="propertyId" />
		<result column="property_value" jdbcType="VARCHAR" property="propertyValue" />
	</resultMap>
	<sql id="Example_Where_Clause">
		<where>
			<foreach collection="oredCriteria" item="criteria" separator="or">
				<if test="criteria.valid">
					<trim prefix="(" prefixOverrides="and" suffix=")">
						<foreach collection="criteria.criteria" item="criterion">
							<choose>
								<when test="criterion.noValue">
									and ${criterion.condition}
								</when>
								<when test="criterion.singleValue">
									and ${criterion.condition} #{criterion.value}
								</when>
								<when test="criterion.betweenValue">
									and ${criterion.condition} #{criterion.value} and
									#{criterion.secondValue}
								</when>
								<when test="criterion.listValue">
									and ${criterion.condition}
									<foreach close=")" collection="criterion.value" item="listItem"
										open="(" separator=",">
										#{listItem}
									</foreach>
								</when>
							</choose>
						</foreach>
					</trim>
				</if>
			</foreach>
		</where>
	</sql>
	<sql id="Update_By_Example_Where_Clause">
		<where>
			<foreach collection="example.oredCriteria" item="criteria"
				separator="or">
				<if test="criteria.valid">
					<trim prefix="(" prefixOverrides="and" suffix=")">
						<foreach collection="criteria.criteria" item="criterion">
							<choose>
								<when test="criterion.noValue">
									and ${criterion.condition}
								</when>
								<when test="criterion.singleValue">
									and ${criterion.condition} #{criterion.value}
								</when>
								<when test="criterion.betweenValue">
									and ${criterion.condition} #{criterion.value} and
									#{criterion.secondValue}
								</when>
								<when test="criterion.listValue">
									and ${criterion.condition}
									<foreach close=")" collection="criterion.value" item="listItem"
										open="(" separator=",">
										#{listItem}
									</foreach>
								</when>
							</choose>
						</foreach>
					</trim>
				</if>
			</foreach>
		</where>
	</sql>
	<sql id="Base_Column_List">
		id, domain_id, property_id, property_value
	</sql>
	<select id="selectByExample" parameterType="com.hust.mining.model.DomainPropertyExample"
		resultMap="BaseResultMap">
		select
		<if test="distinct">
			distinct
		</if>
		<include refid="Base_Column_List" />
		from domain_property
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
		<if test="orderByClause != null">
			order by ${orderByClause}
		</if>
	</select>
	<select id="selectByPrimaryKey" parameterType="java.lang.Integer"
		resultMap="BaseResultMap">
		select 'true' as QUERYID,
		<include refid="Base_Column_List" />
		from domain_property
		where id = #{id,jdbcType=INTEGER}
	</select>
	<delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
		delete from domain_property
		where id = #{id,jdbcType=INTEGER}
	</delete>
	<delete id="deleteByExample" parameterType="com.hust.mining.model.DomainPropertyExample">
		delete from domain_property
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
	</delete>
	<insert id="insert" parameterType="com.hust.mining.model.DomainProperty">
		insert into domain_property (id, domain_id, property_id,
		property_value)
		values (#{id,jdbcType=INTEGER}, #{domainId,jdbcType=VARCHAR},
		#{propertyId,jdbcType=INTEGER},
		#{propertyValue,jdbcType=VARCHAR})
	</insert>

	<insert id="insertBatch" parameterType="java.util.List">
		replace into domain_property
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="id != null">
				id,
			</if>
			<if test="domainId != null">
				domain_id,
			</if>
			<if test="propertyId != null">
				property_id,
			</if>
			<if test="propertyValue != null">
				property_value,
			</if>
		</trim>
		values
		<foreach collection="list" item="item" index="index"
			separator=",">
			<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="id != null">
				#{item.id,jdbcType=INTEGER},
			</if>
			<if test="domainId != null">
				#{item.domainId,jdbcType=VARCHAR},
			</if>
			<if test="propertyId != null">
				#{item.propertyId,jdbcType=INTEGER},
			</if>
			<if test="propertyValue != null">
				#{item.propertyValue,jdbcType=VARCHAR},
			</if>
		</trim>
		</foreach>
	</insert>

	<insert id="insertIgnore" parameterType="java.util.List">
		insert ignore into domain_property
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="id != null">
				id,
			</if>
			<if test="domainId != null">
				domain_id,
			</if>
			<if test="propertyId != null">
				property_id,
			</if>
			<if test="propertyValue != null">
				property_value,
			</if>
		</trim>
		values
		<foreach collection="list" item="item" index="index"
			separator=",">
			<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="id != null">
				#{item.id,jdbcType=INTEGER},
			</if>
			<if test="domainId != null">
				#{item.domainId,jdbcType=VARCHAR},
			</if>
			<if test="propertyId != null">
				#{item.propertyId,jdbcType=INTEGER},
			</if>
			<if test="propertyValue != null">
				#{item.propertyValue,jdbcType=VARCHAR},
			</if>
		</trim>
		</foreach>
	</insert>

	<insert id="insertSelective" parameterType="com.hust.mining.model.DomainProperty">
		insert into domain_property
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="id != null">
				id,
			</if>
			<if test="domainId != null">
				domain_id,
			</if>
			<if test="propertyId != null">
				property_id,
			</if>
			<if test="propertyValue != null">
				property_value,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="id != null">
				#{id,jdbcType=INTEGER},
			</if>
			<if test="domainId != null">
				#{domainId,jdbcType=VARCHAR},
			</if>
			<if test="propertyId != null">
				#{propertyId,jdbcType=INTEGER},
			</if>
			<if test="propertyValue != null">
				#{propertyValue,jdbcType=VARCHAR},
			</if>
		</trim>
	</insert>
	<select id="countByExample" parameterType="com.hust.mining.model.DomainPropertyExample"
		resultType="java.lang.Long">
		select count(*) from domain_property
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
	</select>
	<update id="updateByExampleSelective" parameterType="map">
		update domain_property
		<set>
			<if test="record.id != null">
				id = #{record.id,jdbcType=INTEGER},
			</if>
			<if test="record.domainId != null">
				domain_id = #{record.domainId,jdbcType=VARCHAR},
			</if>
			<if test="record.propertyId != null">
				property_id = #{record.propertyId,jdbcType=INTEGER},
			</if>
			<if test="record.propertyValue != null">
				property_value = #{record.propertyValue,jdbcType=VARCHAR},
			</if>
		</set>
		<if test="_parameter != null">
			<include refid="Update_By_Example_Where_Clause" />
		</if>
	</update>
	<update id="updateByExample" parameterType="map">
		update domain_property
		set id = #{record.id,jdbcType=INTEGER},
		domain_id = #{record.domainId,jdbcType=VARCHAR},
		property_id = #{record.propertyId,jdbcType=INTEGER},
		property_value = #{record.propertyValue,jdbcType=VARCHAR}
		<if test="_parameter != null">
			<include refid="Update_By_Example_Where_Clause" />
		</if>
	</update>
	<update id="updateByPrimaryKeySelective" parameterType="com.hust.mining.model.DomainProperty">
		update domain_property
		<set>
			<if test="domainId != null">
				domain_id = #{domainId,jdbcType=VARCHAR},
			</if>
			<if test="propertyId != null">
				property_id = #{propertyId,jdbcType=INTEGER},
			</if>
			<if test="propertyValue != null">
				property_value = #{propertyValue,jdbcType=VARCHAR},
			</if>
		</set>
		where id = #{id,jdbcType=INTEGER}
	</update>
	<update id="updateByPrimaryKey" parameterType="com.hust.mining.model.DomainProperty">
		update domain_property
		set domain_id = #{domainId,jdbcType=VARCHAR},
		property_id = #{propertyId,jdbcType=INTEGER},
		property_value = #{propertyValue,jdbcType=VARCHAR}
		where id = #{id,jdbcType=INTEGER}
	</update>
</mapper>